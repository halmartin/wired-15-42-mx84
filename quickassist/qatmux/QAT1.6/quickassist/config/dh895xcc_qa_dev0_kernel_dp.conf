#########################################################################
#
# @par
# This file is provided under a dual BSD/GPLv2 license.  When using or 
#   redistributing this file, you may do so under either license.
# 
#   GPL LICENSE SUMMARY
# 
#   Copyright(c) 2007-2013 Intel Corporation. All rights reserved.
# 
#   This program is free software; you can redistribute it and/or modify 
#   it under the terms of version 2 of the GNU General Public License as
#   published by the Free Software Foundation.
# 
#   This program is distributed in the hope that it will be useful, but 
#   WITHOUT ANY WARRANTY; without even the implied warranty of 
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
#   General Public License for more details.
# 
#   You should have received a copy of the GNU General Public License 
#   along with this program; if not, write to the Free Software 
#   Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
#   The full GNU General Public License is included in this distribution 
#   in the file called LICENSE.GPL.
# 
#   Contact Information:
#   Intel Corporation
# 
#   BSD LICENSE 
# 
#   Copyright(c) 2007-2013 Intel Corporation. All rights reserved.
#   All rights reserved.
# 
#   Redistribution and use in source and binary forms, with or without 
#   modification, are permitted provided that the following conditions 
#   are met:
# 
#     * Redistributions of source code must retain the above copyright 
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright 
#       notice, this list of conditions and the following disclaimer in 
#       the documentation and/or other materials provided with the 
#       distribution.
#     * Neither the name of Intel Corporation nor the names of its 
#       contributors may be used to endorse or promote products derived 
#       from this software without specific prior written permission.
# 
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
#   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
#   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
#   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
#   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
#   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
#   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
#   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# 
#  version: QAT1.6.L.2.6.0-65
#########################################################################
########################################################
#
# This file is the configuration for a single dh895xcc_qa
# device.
#
# Each device has 32 independent banks.
# - The interrupt for each can be directed to a
#   specific core.
# Each bank can contain up to 2 crypto and/or up to 2 data
# compression services.
#
########################################################

##############################################
# General Section
##############################################

[GENERAL]
# Is this to be deprecated?
ServicesEnabled = cy;dc

# Look Aside Cryptographic Configuration
cyHmacAuthMode = 1

# Wireless Enabled
WirelessEnabled = 0

# Firmware Location Configuration
Firmware_MofPath = dh895xcc/mof_firmware.bin
Firmware_MmpPath = dh895xcc/mmp_firmware.bin


# Default selection of CY concurrent requests.
CyNumConcurrentSymRequests = 512
CyNumConcurrentAsymRequests = 64

# Default number of DC concurrent requests.
DcNumConcurrentRequests = 512

#Statistics, valid values: 1,0
statsGeneral = 1
statsDc = 1
statsDh = 1
statsDrbg = 1
statsDsa = 1
statsEcc = 1
statsKeyGen = 1
statsLn = 1
statsPrime = 1
statsRsa = 1
statsSym = 1

# Debug feature, if set to 1 it enables additional entries in /proc filesystem
ProcDebug = 1

#####################################################################
#
# Hardware Access Bank Configuration
# Each device has 32 banks (0-31)
# If the OS supports MSI-X, each bank has an
# steerable MSI-x interrupt which may be
# affinitized to a particular core.
#
# There is only one logical accelerator:
#   [Accelerator0]
#
# Items configurable per bank are:
# - Interrupt Coalescing Enabled (MSI-x interrupts)
# - The time in nano seconds before a coalesced interrupt is asserted
# - The core to steer interrupts for this bank to
# - Interrupt Coalescing based on the number of responses
#
# The format of the bank configurations are:
#               Bank<n>InterruptCoalescingEnabled = "xxxx"
#               Bank<n>InterruptCoalescingTimerNs = "xxxx"
#               Bank<n>CoreIDAffinity = "xxxx"
#               Bank<n>InterruptCoalescingNumResponses = "xxxx"
#
# Where:
#       - n is the number of the bank starting at 0.
#
#####################################################################

[Accelerator0]
Bank0InterruptCoalescingEnabled = 1
Bank0InterruptCoalescingTimerNs = 10000
Bank0CoreIDAffinity = 0
Bank0InterruptCoalescingNumResponses = 0

Bank1InterruptCoalescingEnabled = 1
Bank1InterruptCoalescingTimerNs = 10000
Bank1CoreIDAffinity = 1
Bank1InterruptCoalescingNumResponses = 0

Bank2InterruptCoalescingEnabled = 1
Bank2InterruptCoalescingTimerNs = 10000
Bank2CoreIDAffinity = 2
Bank2InterruptCoalescingNumResponses = 0

Bank3InterruptCoalescingEnabled = 1
Bank3InterruptCoalescingTimerNs = 10000
Bank3CoreIDAffinity = 3
Bank3InterruptCoalescingNumResponses = 0

Bank4InterruptCoalescingEnabled = 1
Bank4InterruptCoalescingTimerNs = 10000
Bank4CoreIDAffinity = 4
Bank4InterruptCoalescingNumResponses = 0

Bank5InterruptCoalescingEnabled = 1
Bank5InterruptCoalescingTimerNs = 10000
Bank5CoreIDAffinity = 5
Bank5InterruptCoalescingNumResponses = 0

Bank6InterruptCoalescingEnabled = 1
Bank6InterruptCoalescingTimerNs = 10000
Bank6CoreIDAffinity = 6
Bank6InterruptCoalescingNumResponses = 0

Bank7InterruptCoalescingEnabled = 1
Bank7InterruptCoalescingTimerNs = 10000
Bank7CoreIDAffinity = 7
Bank7InterruptCoalescingNumResponses = 0

Bank8InterruptCoalescingEnabled = 1
Bank8InterruptCoalescingTimerNs = 10000
Bank8CoreIDAffinity = 8
Bank8InterruptCoalescingNumResponses = 0

Bank9InterruptCoalescingEnabled = 1
Bank9InterruptCoalescingTimerNs = 10000
Bank9CoreIDAffinity = 9
Bank9InterruptCoalescingNumResponses = 0

Bank10InterruptCoalescingEnabled = 1
Bank10InterruptCoalescingTimerNs = 10000
Bank10CoreIDAffinity = 10
Bank10InterruptCoalescingNumResponses = 0

Bank11InterruptCoalescingEnabled = 1
Bank11InterruptCoalescingTimerNs = 10000
Bank11CoreIDAffinity = 11
Bank11InterruptCoalescingNumResponses = 0

Bank12InterruptCoalescingEnabled = 1
Bank12InterruptCoalescingTimerNs = 10000
Bank12CoreIDAffinity = 12
Bank12InterruptCoalescingNumResponses = 0

Bank13InterruptCoalescingEnabled = 1
Bank13InterruptCoalescingTimerNs = 10000
Bank13CoreIDAffinity = 13
Bank13InterruptCoalescingNumResponses = 0

Bank14InterruptCoalescingEnabled = 1
Bank14InterruptCoalescingTimerNs = 10000
Bank14CoreIDAffinity = 14
Bank14InterruptCoalescingNumResponses = 0

Bank15InterruptCoalescingEnabled = 1
Bank15InterruptCoalescingTimerNs = 10000
Bank15CoreIDAffinity = 15
Bank15InterruptCoalescingNumResponses = 0

Bank16InterruptCoalescingEnabled = 1
Bank16InterruptCoalescingTimerNs = 10000
Bank16CoreIDAffinity = 0
Bank16InterruptCoalescingNumResponses = 0

Bank17InterruptCoalescingEnabled = 1
Bank17InterruptCoalescingTimerNs = 10000
Bank17CoreIDAffinity = 1
Bank17InterruptCoalescingNumResponses = 0

Bank18InterruptCoalescingEnabled = 1
Bank18InterruptCoalescingTimerNs = 10000
Bank18CoreIDAffinity = 2
Bank18InterruptCoalescingNumResponses = 0

Bank19InterruptCoalescingEnabled = 1
Bank19InterruptCoalescingTimerNs = 10000
Bank19CoreIDAffinity = 3
Bank19InterruptCoalescingNumResponses = 0

Bank20InterruptCoalescingEnabled = 1
Bank20InterruptCoalescingTimerNs = 10000
Bank20CoreIDAffinity = 4
Bank20InterruptCoalescingNumResponses = 0

Bank21InterruptCoalescingEnabled = 1
Bank21InterruptCoalescingTimerNs = 10000
Bank21CoreIDAffinity = 5
Bank21InterruptCoalescingNumResponses = 0

Bank22InterruptCoalescingEnabled = 1
Bank22InterruptCoalescingTimerNs = 10000
Bank22CoreIDAffinity = 6
Bank22InterruptCoalescingNumResponses = 0

Bank23InterruptCoalescingEnabled = 1
Bank23InterruptCoalescingTimerNs = 10000
Bank23CoreIDAffinity = 7
Bank23InterruptCoalescingNumResponses = 0

Bank24InterruptCoalescingEnabled = 1
Bank24InterruptCoalescingTimerNs = 10000
Bank24CoreIDAffinity = 8
Bank24InterruptCoalescingNumResponses = 0

Bank25InterruptCoalescingEnabled = 1
Bank25InterruptCoalescingTimerNs = 10000
Bank25CoreIDAffinity = 9
Bank25InterruptCoalescingNumResponses = 0

Bank26InterruptCoalescingEnabled = 1
Bank26InterruptCoalescingTimerNs = 10000
Bank26CoreIDAffinity = 10
Bank26InterruptCoalescingNumResponses = 0

Bank27InterruptCoalescingEnabled = 1
Bank27InterruptCoalescingTimerNs = 10000
Bank27CoreIDAffinity = 11
Bank27InterruptCoalescingNumResponses = 0

Bank28InterruptCoalescingEnabled = 1
Bank28InterruptCoalescingTimerNs = 10000
Bank28CoreIDAffinity = 12
Bank28InterruptCoalescingNumResponses = 0

Bank29InterruptCoalescingEnabled = 1
Bank29InterruptCoalescingTimerNs = 10000
Bank29CoreIDAffinity = 13
Bank29InterruptCoalescingNumResponses = 0

Bank30InterruptCoalescingEnabled = 1
Bank30InterruptCoalescingTimerNs = 10000
Bank30CoreIDAffinity = 14
Bank30InterruptCoalescingNumResponses = 0

Bank31InterruptCoalescingEnabled = 1
Bank31InterruptCoalescingTimerNs = 10000
Bank31CoreIDAffinity = 15
Bank31InterruptCoalescingNumResponses = 0


#######################################################
#
# Logical Instances Section
# A logical instance allows each address domain
# (kernel space and individual user space processes)
# to be allocated to a bank and to define the
# behavior of that bank.
#
# The address domains are in the following format
# - For kernel address domains
#       [KERNEL]
# - For user process address domains
#   [xxxxx]
#   Where xxxxx may be any ascii value which uniquely identifies
#   the user mode process.
#   To allow the driver correctly configure the
#   logical instances associated with this user process,
#   the process must call the icp_sal_userStart(...)
#   passing the xxxxx string during process initialisation.
#   When the user space process is finish it must call
#   icp_sal_userStop(...) to free resources.
#   If there are multiple devices present in the system all conf
#   files that describe the devices must have the same address domain
#   sections even if the address domain does not configure any instances
#   on that particular device. So if icp_sal_userStart("xxxxx") is called
#   then user process address domain [xxxxx] needs to be present in all
#   conf files for all devices in the system.
#
# Items configurable by a logical instance are:
# - Name of the logical instance
# - The bank associated with this logical
#   instance.
# - The response mode associated wth this logical instance
#   For instance in the kernel space :
#       0 for IRQ
#       1 for poll mode
#   For instance in the user space :
#       0 for IRQ (deprecated, please do not use it anymore)
#       1 for poll mode
#       2 for epoll mode (event based polling mode)
# - The number of concurrent requests supported. Note this number
#   affects the amount of memory allocated by the driver. Also
#   Bank<n>InterruptCoalescingNumResponses is only supported for
#   number of concurrent requests equal to 512.
#
#
# The format of the logical instances are:
# - For crypto (Kernel space):
#               Cy<n>Name = "xxxx"
#               Cy<n>BankNumber = 0-31
#               Cy<n>IsPolled = 0|1
#               Cy<n>NumConcurrentSymRequests = 64|128|256|512|1024|2048|4096
#               Cy<n>NumConcurrentAsymRequests = 64|128|256|512|1024|2048|4096
#               Cy<n>RingAsymTx = 0|1
#               Cy<n>RingAsymRx = 8|9
#               Cy<n>RingSymTx = 2|3
#               Cy<n>RingSymRx = 10|11
#               Cy<n>RingNrbgTx = 4|5
#               Cy<n>RingNrbgRx = 12|13
#
# - For Data Compression (Kernel space):
#               Dc<n>Name = "xxxx"
#               Dc<n>BankNumber = 0-31
#               Dc<n>IsPolled = 0|1
#               Dc<n>NumConcurrentRequests = 64|128|256|512|1024|2048|4096
#               Dc<n>RingTx = 6|7
#               Dc<n>RingRx = 14|15
#
# - For crypto (User space):
#               Cy<n>Name = "xxxx"
#               Cy<n>BankNumber = 0-31
#               Cy<n>IsPolled = 1|2
#               Cy<n>NumConcurrentSymRequests = 64|128|256|512|1024|2048|4096
#               Cy<n>NumConcurrentAsymRequests = 64|128|256|512|1024|2048|4096
#               Cy<n>RingAsymTx = 0|1
#               Cy<n>RingAsymRx = 8|9
#               Cy<n>RingSymTx = 2|3
#               Cy<n>RingSymRx = 10|11
#               Cy<n>RingNrbgTx = 4|5
#               Cy<n>RingNrbgRx = 12|13
#
# - For Data Compression (User space):
#               Dc<n>Name = "xxxx"
#               Dc<n>BankNumber = 0-31
#               Dc<n>IsPolled = 1|2
#               Dc<n>NumConcurrentRequests = 64|128|256|512|1024|2048|4096
#               Dc<n>RingTx = 6|7
#               Dc<n>RingRx = 14|15
#
# Where:
#       - n is the number of this logical instance starting at 0.
#       - xxxx may be any ascii value which identifies the logical instance.
#
########################################################

##############################################
# Kernel Instances Section
##############################################
[KERNEL]
NumberCyInstances = 4
NumberDcInstances = 4

# Crypto - Kernel instance #0

Cy0Name = "IPSec0"
Cy0BankNumber = 0
Cy0IsPolled = 1
Cy0NumConcurrentSymRequests = 512
Cy0NumConcurrentAsymRequests = 64
Cy0RingAsymTx = 0
Cy0RingAsymRx = 8
Cy0RingSymTx = 2
Cy0RingSymRx = 10
Cy0RingNrbgTx = 4
Cy0RingNrbgRx = 12

# Crypto - Kernel instance #1
Cy1Name = "IPSec1"
Cy1BankNumber = 1
Cy1IsPolled = 1
Cy1NumConcurrentSymRequests = 512
Cy1NumConcurrentAsymRequests = 64
Cy1RingAsymTx = 0
Cy1RingAsymRx = 8
Cy1RingSymTx = 2
Cy1RingSymRx = 10
Cy1RingNrbgTx = 4
Cy1RingNrbgRx = 12

# Crypto - Kernel instance #2
Cy2Name = "IPSec2"
Cy2BankNumber = 0
Cy2IsPolled = 1
Cy2NumConcurrentSymRequests = 512
Cy2NumConcurrentAsymRequests = 64
Cy2RingAsymTx = 1
Cy2RingAsymRx = 9
Cy2RingSymTx = 3
Cy2RingSymRx = 11
Cy2RingNrbgTx = 5
Cy2RingNrbgRx = 13

# Crypto - Kernel instance #3
Cy3Name = "IPSec3"
Cy3BankNumber = 1
Cy3IsPolled = 1
Cy3NumConcurrentSymRequests = 512
Cy3NumConcurrentAsymRequests = 64
Cy3RingAsymTx = 1
Cy3RingAsymRx = 9
Cy3RingSymTx = 3
Cy3RingSymRx = 11
Cy3RingNrbgTx = 5
Cy3RingNrbgRx = 13


# Data Compression - Kernel instance #0
Dc0Name = "IPComp0"
Dc0IsPolled = 1
Dc0NumConcurrentRequests = 512
Dc0BankNumber = 0
Dc0RingTx = 6
Dc0RingRx = 14

# Data Compression - Kernel instance #1
Dc1Name = "IPComp1"
Dc1IsPolled = 1
Dc1NumConcurrentRequests = 512
Dc1BankNumber = 1
Dc1RingTx = 6
Dc1RingRx = 14

# Data Compression - Kernel instance #2
Dc2Name = "IPComp2"
Dc2IsPolled = 1
Dc2NumConcurrentRequests = 512
Dc2BankNumber = 0
Dc2RingTx = 7
Dc2RingRx = 15

# Data Compression - Kernel instance #3
Dc3Name = "IPComp3"
Dc3IsPolled = 1
Dc3NumConcurrentRequests = 512
Dc3BankNumber = 1
Dc3RingTx = 7
Dc3RingRx = 15


##############################################
# User Process Instance Section
##############################################
[SSL]
NumberCyInstances = 0
NumberDcInstances = 0
